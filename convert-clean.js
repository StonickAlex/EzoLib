const fs = require('fs');
const path = require('path');
const {
    execSync
} = require('child_process');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
function cleanText(text) {
    return text
        // –£–±–∏—Ä–∞–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤—ã–∑–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –≤ MDX
        .replace(/[{}]/g, '') // –£–±–∏—Ä–∞–µ–º —Ñ–∏–≥—É—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏
        .replace(/\[([^\]]*)\]{\.underline\}/g, '$1') // –£–±–∏—Ä–∞–µ–º –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ
        .replace(/\{[^}]*\}/g, '') // –£–±–∏—Ä–∞–µ–º –≤—Å–µ —Ñ–∏–≥—É—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏ —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
        .replace(/<!--[\s\S]*?-->/g, '') // –£–¥–∞–ª—è–µ–º HTML –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
        .replace(/\\\*/g, '*') // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–≤–µ–∑–¥–æ—á–∫–∏
        .replace(/\\\./g, '.') // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ—á–∫–∏
        .replace(/\\\,/g, ',') // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–µ
        .replace(/\\\"/g, '"') // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏
        .replace(/\\\'/g, "'") // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞–ø–æ—Å—Ç—Ä–æ—Ñ—ã
        .replace(/\n{3,}/g, '\n\n') // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
        .trim();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ docx –≤ markdown
function convertDocxToMarkdown(docxPath) {
    try {
        const command = `pandoc "${docxPath}" -t markdown --wrap=none`;
        const markdown = execSync(command, {
            encoding: 'utf8'
        });
        return cleanText(markdown);
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ ${docxPath}:`, error.message);
        return null;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è MDX —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function createMdxPage(folderName, title, description) {
    try {
        const knowLadgePath = path.join(__dirname, 'KnowLadge', folderName);
        const docsPath = path.join(__dirname, 'src', 'app', 'docs');

        // –ú–∞–ø–ø–∏–Ω–≥ –ø–∞–ø–æ–∫
        const folderMapping = {
            '–¢–∞—Ä–æ': 'tarot',
            '–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è': 'numerology',
            '–û–±—Ä—è–¥—ã': 'rites',
            '–û—Å–Ω–æ–≤—ã –º–∞–≥–∏–∏': 'magic-basics',
            '–ü—Å–∏—Ö–æ—Å–æ–º–∞—Ç–∏–∫–∞': 'psychosomatics',
            '–°—Ç—Ä–∏–º': 'stream',
            '–°—Ö–µ–º–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞': 'conversation-schema',
            '–ú–∞–≥–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞ —Å –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è–º–∏': 'arguments',
            'Astrology ': 'astrology'
        };

        const url = folderMapping[folderName];
        if (!url) {
            console.log(`‚ùå –ü–∞–ø–∫–∞ "${folderName}" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –º–∞–ø–ø–∏–Ω–≥–µ`);
            return;
        }

        if (!fs.existsSync(knowLadgePath)) {
            console.log(`‚ùå –ü–∞–ø–∫–∞ "${folderName}" –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ KnowLadge`);
            return;
        }

        // –ß–∏—Ç–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ
        const files = fs.readdirSync(knowLadgePath);
        const docxFiles = files.filter(file => file.endsWith('.docx'));

        if (docxFiles.length === 0) {
            console.log(`‚ö†Ô∏è  –í –ø–∞–ø–∫–µ ${folderName} –Ω–µ—Ç .docx —Ñ–∞–π–ª–æ–≤`);
            return;
        }

        // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ docx —Ñ–∞–π–ª—ã
        let combinedContent = '';
        for (const docxFile of docxFiles) {
            const docxPath = path.join(knowLadgePath, docxFile);
            console.log(`üìÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º: ${docxFile}`);

            const markdown = convertDocxToMarkdown(docxPath);
            if (markdown) {
                const fileName = docxFile.replace('.docx', '');
                combinedContent += `\n\n## ${fileName}\n\n${markdown}\n\n`;
            }
        }

        if (!combinedContent.trim()) {
            console.log(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ ${folderName}`);
            return;
        }

        // –°–æ–∑–¥–∞–µ–º MDX –∫–æ–Ω—Ç–µ–Ω—Ç –±–µ–∑ frontmatter
        const mdxContent = combinedContent;

        // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ —Ñ–∞–π–ª
        const mdxPath = path.join(docsPath, url, 'page.mdx');
        const outputDir = path.dirname(mdxPath);

        if (!fs.existsSync(outputDir)) {
            fs.mkdirSync(outputDir, {
                recursive: true
            });
        }

        fs.writeFileSync(mdxPath, mdxContent);
        console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ MDX —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${mdxPath}`);

    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è MDX –¥–ª—è ${folderName}:`, error.message);
    }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
    const folderName = process.argv[2];

    if (!folderName) {
        console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node convert-clean.js <–Ω–∞–∑–≤–∞–Ω–∏–µ_–ø–∞–ø–∫–∏>');
        console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞–ø–∫–∏:');
        console.log('- –¢–∞—Ä–æ');
        console.log('- –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è');
        console.log('- –û–±—Ä—è–¥—ã');
        console.log('- –û—Å–Ω–æ–≤—ã –º–∞–≥–∏–∏');
        console.log('- –ü—Å–∏—Ö–æ—Å–æ–º–∞—Ç–∏–∫–∞');
        console.log('- –°—Ç—Ä–∏–º');
        console.log('- –°—Ö–µ–º–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞');
        console.log('- –ú–∞–≥–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞ —Å –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è–º–∏');
        return;
    }

    console.log(`üöÄ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –ø–∞–ø–∫—É: ${folderName}\n`);

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
    const titles = {
        '–¢–∞—Ä–æ': '–¢–∞—Ä–æ - Magic Lab',
        '–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è': '–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è - Magic Lab',
        '–û–±—Ä—è–¥—ã': '–û–±—Ä—è–¥—ã - Magic Lab',
        '–û—Å–Ω–æ–≤—ã –º–∞–≥–∏–∏': '–û—Å–Ω–æ–≤—ã –º–∞–≥–∏–∏ - Magic Lab',
        '–ü—Å–∏—Ö–æ—Å–æ–º–∞—Ç–∏–∫–∞': '–ü—Å–∏—Ö–æ—Å–æ–º–∞—Ç–∏–∫–∞ - Magic Lab',
        '–°—Ç—Ä–∏–º': '–°—Ç—Ä–∏–º - Magic Lab',
        '–°—Ö–µ–º–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞': '–°—Ö–µ–º–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ - Magic Lab',
        '–ú–∞–≥–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞ —Å –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è–º–∏': '–ú–∞–≥–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞ —Å –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è–º–∏ - Magic Lab'
    };

    const descriptions = {
        '–¢–∞—Ä–æ': '–ò—Å–∫—É—Å—Å—Ç–≤–æ –≥–∞–¥–∞–Ω–∏—è –Ω–∞ –∫–∞—Ä—Ç–∞—Ö –¢–∞—Ä–æ –∏ –∏—Ö –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è',
        '–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è': '–†–∞–±–æ—Ç–∞ —Å —á–∏—Å–ª–∞–º–∏, –¥–∞—Ç–∞–º–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –∏ –∏—Ö –≤–ª–∏—è–Ω–∏–µ–º –Ω–∞ —Å—É–¥—å–±—É —á–µ–ª–æ–≤–µ–∫–∞',
        '–û–±—Ä—è–¥—ã': '–ú–∞–≥–∏—á–µ—Å–∫–∏–µ –æ–±—Ä—è–¥—ã –∏ —Ä–∏—Ç—É–∞–ª—ã',
        '–û—Å–Ω–æ–≤—ã –º–∞–≥–∏–∏': '–ò–∑—É—á–µ–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –º–∞–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫, —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –ª—é–±–æ–≤–Ω–æ–π –º–∞–≥–∏–∏',
        '–ü—Å–∏—Ö–æ—Å–æ–º–∞—Ç–∏–∫–∞': '–°–≤—è–∑—å –ø—Å–∏—Ö–∏–∫–∏ –∏ —Ç–µ–ª–∞ –≤ —ç–∑–æ—Ç–µ—Ä–∏—á–µ—Å–∫–æ–π –ø—Ä–∞–∫—Ç–∏–∫–µ',
        '–°—Ç—Ä–∏–º': '–ü—Ä—è–º—ã–µ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ –∏ –æ–Ω–ª–∞–π–Ω –ø—Ä–∞–∫—Ç–∏–∫–∏',
        '–°—Ö–µ–º–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞': '–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ —Ç–µ—Ö–Ω–∏–∫–∏ –≤–µ–¥–µ–Ω–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏',
        '–ú–∞–≥–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞ —Å –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è–º–∏': '–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ä–∞–±–æ—Ç–µ —Å –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ —ç–∑–æ—Ç–µ—Ä–∏—á–µ—Å–∫–æ–π –ø—Ä–∞–∫—Ç–∏–∫–µ'
    };

    const title = titles[folderName] || `${folderName} - Magic Lab`;
    const description = descriptions[folderName] || `–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ ${folderName.toLowerCase()}`;

    createMdxPage(folderName, title, description);

    console.log(`\nüéâ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –ø–∞–ø–∫–∏ "${folderName}" –∑–∞–≤–µ—Ä—à–µ–Ω–∞!`);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
main();